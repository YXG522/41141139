#include <iostream>
#include <vector>
using namespace std;

const int MAX_M = 4;  // 控制最大 m 值避免 stack overflow
const int MAX_N = 1000;
int memo[MAX_M + 1][MAX_N + 1];  // 儲存已計算結果以避免重複運算

int ackermann(int m, int n) {
    if (m < 0 || n < 0) return -1; // 不接受負數
    if (memo[m][n] != -1) return memo[m][n];

    if (m == 0)
        memo[m][n] = n + 1;
    else if (n == 0)
        memo[m][n] = ackermann(m - 1, 1);
    else
        memo[m][n] = ackermann(m - 1, ackermann(m, n - 1));

    return memo[m][n];
}

int main() {
    // 初始化 memo 陣列
    for (int i = 0; i <= MAX_M; ++i)
        for (int j = 0; j <= MAX_N; ++j)
            memo[i][j] = -1;

    // 測試輸入
    int m = 3, n = 5;
    cout << "Ackermann(" << m << ", " << n << ") = " << ackermann(m, n) << endl;

    return 0;
}
